##################################################################
# local blueprint for installing a cloudify agent on a
# remote machine. this blueprint run the agent installer code
##################################################################

tosca_definitions_version: cloudify_dsl_1_1

imports:
  - http://www.getcloudify.org/spec/cloudify/3.2/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.2/plugin.yaml

inputs:
  prefix:
    description: >
      Unique test id to be added as a prefix for resource names.
  external_network:
    type: string
  os_username:
    type: string
  os_password:
    type: string
  os_tenant_name:
    type: string
  os_auth_url:
    type: string
  os_region:
    type: string
  flavor:
    type: string
  image_id:
    type: string
  key_pair_path:
    type: string

node_templates:
  external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: external_network }
      openstack_config: &OPENSTACK_CONFIG
        username: { get_input: os_username }
        password: { get_input: os_password }
        tenant_name: { get_input: os_tenant_name }
        auth_url: { get_input: os_auth_url }
        region: { get_input: os_region }

  router:
    type: cloudify.openstack.nodes.Router
    properties:
      resource_id: { concat: [{ get_input: prefix }, '-agent-vm-router'] }
      openstack_config: *OPENSTACK_CONFIG
    relationships:
      - target: external_network
        type: cloudify.relationships.connected_to

  network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { concat: [{ get_input: prefix }, '-agent-vm-network'] }
      openstack_config: *OPENSTACK_CONFIG

  subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { concat: [{ get_input: prefix }, '-agent-vm-subnet'] }
      subnet:
        ip_version: 4
        cidr: 10.67.79.0/24
      openstack_config: *OPENSTACK_CONFIG
    relationships:
      - target: network
        type: cloudify.relationships.contained_in
      - target: router
        type: cloudify.openstack.subnet_connected_to_router

  floating_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_property: [external_network, resource_id] }
      openstack_config: *OPENSTACK_CONFIG

  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      resource_id: { concat: [{ get_input: prefix }, '-agent-vm-security-group'] }
      rules:
        - port: 22
          remote_ip_prefix: 0.0.0.0/0
      openstack_config: *OPENSTACK_CONFIG

  keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      resource_id: { concat: [{ get_input: prefix }, '-agent-vm-keypair'] }
      private_key_path: { get_input: key_pair_path }
      openstack_config: *OPENSTACK_CONFIG

  ########################################################################
  # we will be installing an agent on this host. since we
  # dont have a manager this host will server as the manager as well, by
  # installing rabbit mq on it
  #########################################################################

  agent_vm:
    type: cloudify.openstack.nodes.Server
    properties:
      install_agent: false
      image: { get_input: image_id }
      flavor: { get_input: flavor }
      server:
        userdata: |
          mkdir -p /tmp/rabbitmq
          cd /tmp/rabbitmq
          curl -L -O https://www.rabbitmq.com/releases/rabbitmq-server/v3.4.2/rabbitmq-server-generic-unix-3.4.2.tar.gz
          tar -xvf rabbitmq-server-generic-unix-3.4.2.tar.gz
          nohup ./rabbitmq_server-3.4.2/sbin/rabbitmq-server > /dev/null 2>&1 &
      management_network_name: { get_property: [network, resource_id] }
      openstack_config: *OPENSTACK_CONFIG
    interfaces:
      cloudify.interfaces.worker_installer:
        install:
          inputs:
            cloudify_agent:
              manager_ip: 127.0.0.1
              user: ubuntu
              key: { get_input: key_pair_path }
              ip: { get_attribute: [ floating_ip, floating_ip_address ] }
              source_url: https://github.com/cloudify-cosmo/cloudify-agent/archive/CFY-2649-cloudify-agent-impl.zip
              requirements: https://raw.githubusercontent.com/cloudify-cosmo/cloudify-agent/CFY-2649-cloudify-agent-impl/dev-requirements.txt

    relationships:
      - target: floating_ip
        type: cloudify.openstack.server_connected_to_floating_ip
      - target: network
        type: cloudify.relationships.connected_to
      - target: subnet
        type: cloudify.relationships.depends_on
      - target: keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: security_group
        type: cloudify.openstack.server_connected_to_security_group
